#Requires -Version 5.0

param (
    [Parameter(Mandatory = $true, HelpMessage = "Enter the LaTeX filename without the .tex extension.")]
    [string]$FileName
)

$TexFile = "${FileName}.tex"

# --- Configuration ---
# Add or remove auxiliary file extensions as needed
$AuxFileExtensions = @(
    ".aux",
    ".log",
    ".toc", # Table of Contents
    ".lof", # List of Figures
    ".lot", # List of Tables
    ".out", # Hyperref outlines, etc.
    ".synctex.gz", # SyncTeX file for editor/PDF sync
    ".fls", # File list generated by some processes
    ".fdb_latexmk" # Latexmk database file
    # For BibTeX/Biber (uncomment if you use them)
    # ".bbl",    # Bibliography file (BibTeX/Biber)
    # ".blg",    # Bibliography log file (BibTeX/Biber)
    # ".bcf",    # Biber control file
    # ".run.xml" # Biber run file
)

# Number of XeLaTeX runs (usually 2-3 for references/TOC to stabilize)
$XeLaTeXRuns = 2

# --- Check if .tex file exists ---
if (-not (Test-Path -Path $TexFile -PathType Leaf)) {
    Write-Error "Error: LaTeX file '$TexFile' not found in the current directory."
    exit 1
}

# --- Compilation Steps ---
Write-Host "Starting XeLaTeX compilation for '$TexFile'..."

for ($i = 1; $i -le $XeLaTeXRuns; $i++) {
    Write-Host "Running XeLaTeX pass $i of $XeLaTeXRuns..."
    xelatex.exe -interaction=nonstopmode -halt-on-error "$TexFile"
    if ($LASTEXITCODE -ne 0) {
        Write-Error "XeLaTeX compilation failed on pass $i. Check '$FileName.log' for details."
        # Optionally, you might want to exit here or let it try to clean up
        # exit $LASTEXITCODE
    }
}

# --- Optional: Add BibTeX/Biber steps here if needed ---
# Example for Biber (uncomment and adjust if you use Biber):
# Write-Host "Running Biber..."
# biber.exe "$FileName"
# if ($LASTEXITCODE -ne 0) {
#     Write-Error "Biber processing failed. Check '$FileName.blg' for details."
# } else {
#     # If Biber ran successfully, you often need more LaTeX runs
#     Write-Host "Running XeLaTeX pass after Biber..."
#     xelatex.exe -interaction=nonstopmode -halt-on-error "$TexFile"
#     if ($LASTEXITCODE -ne 0) { Write-Error "XeLaTeX (after Biber) failed." }
#     Write-Host "Running XeLaTeX final pass..."
#     xelatex.exe -interaction=nonstopmode -halt-on-error "$TexFile"
#     if ($LASTEXITCODE -ne 0) { Write-Error "XeLaTeX (final pass) failed." }
# }


# --- Cleanup Auxiliary Files ---
Write-Host "Cleaning up auxiliary files..."
$FilesRemoved = 0
$FilesNotFound = 0

foreach ($ext in $AuxFileExtensions) {
    $FileToDelete = "${FileName}${ext}"
    if (Test-Path -Path $FileToDelete -PathType Leaf) {
        try {
            Remove-Item -Path $FileToDelete -Force -ErrorAction Stop
            Write-Verbose "Removed: $FileToDelete"
            $FilesRemoved++
        }
        catch {
            Write-Warning "Could not remove '$FileToDelete': $($_.Exception.Message)"
        }
    }
    else {
        Write-Verbose "Not found (no need to remove): $FileToDelete"
        $FilesNotFound++
    }
}

Write-Host "----------------------------------------"
if ($LASTEXITCODE -eq 0) {
    Write-Host "XeLaTeX compilation successful for '$FileName.pdf'." -ForegroundColor Green
}
else {
    Write-Warning "XeLaTeX compilation may have encountered errors. Please check the output and '$FileName.log'."
}
Write-Host "Cleanup complete. $FilesRemoved file(s) removed. $FilesNotFound auxiliary file type(s) not found."
Write-Host "----------------------------------------"